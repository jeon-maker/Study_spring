
인터페이스는 추상 클래스보다 더욱 더 추상화된 클래스라고 생각하면 된다.

추상 클래스가 미완성 설계도 라면, 인터페이스는 아주 기본적인 설계도 라고 생각하면 된다.

인터페이스는

interfasce 인터페이스 이름 {

타입 상수 이름 = 값

메서드 이름

} 과 같은 형식으로 사용하며, 모든 멤버 변수는 public static final 이어야 하며 부분 또는 완전 생략 가능하다.

메서드는 public abstarct 이어야 하며 부분 또는 완전 생략 가능하다.

인터페이스의 상속은 extends로 표현하며 인터페이스 간 상속이 가능하다.

인터페이스의 구현은 클래스를 통해서 이루어진다.

다만 클래스가 인터페이스를 구현할 떄는 extends가 아닌 implements를 사용한다.


인터페이스 Fightable 을 클래스 fighter가 구현했을 때, 아래와 같이 fighter 인서턴스를 Fightable 타입의 참조변수로 참조 하는것이 가능하다.

Fightable f = (Fightable) new Fighter();


따라서 인터페이스는 다음과 같이 메서드의 매개변수의 타입으로 사용될 수 있다.

void attack(Fightable F){

}

﻿
